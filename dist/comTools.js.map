{"version":3,"sources":["webpack://comTools/webpack/universalModuleDefinition","webpack://comTools/webpack/bootstrap","webpack://comTools/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isEqualOfJSON","value1","value2","JSON","stringify","multipleLoop","loopCall","complete","stepComplete","thisValue","total","Number","POSITIVE_INFINITY","step","delay","index","stepCount","stop","setStop","newValue","loop","needLoop","timeoutId","atuoSingleLoop","singleTotal","Math","min","setTimeout","stopInfo","clearTimeout","arrayPropertyDescriptors","this","loopOpt","length","safelyIterate","iterable","operation","undefined","arrayCopy","push","filter","currentValue","currentIndex","indexOf","getTypeOf","inst","typeInfo","constructor","getTypeStringOf","typeStr","defineListenableProperty","obj","prop","options","ready","readyName","noEvent","event","eventName","newValueKey","oldValueKey","getDefault","priReadyName","priProp","configurable","_this","propValue","Promise","resolve","createControllablePromise","set","propGetter","propSetter","httpReady","oldValue","change","Event","dispatchEvent","defineListenableProperties","props","propsObj","Array","isArray","reduce","propName","keys","forEach","propOpts","defineListenablePropertyGetter","asGetter","createUniqueIdentifier","Date","getTime","toString","random","executor","statusCompletesImmediately","executorIsvalid","oriFuns","clearAdditions","caPromise","reject","resolveFun","rejectFun","reason","defineProperties"],"mappings":"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","file":"comTools.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"comTools\"] = factory();\n\telse\n\t\troot[\"comTools\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * 通过把值转换成JSON字符来判断是否相等\n * @param value1 : any\n * @param value2 : any\n * @returns boolean\n *\n *\n * 注意：\n * - 方法能用于判断对象的内容是否相等，相等的条件是：这2个对象拥有相同的属性 和 属性值，且属性及属性的属性 的添加顺序是一致的；即：当两个对象的拥有相同的属性和属性值时，如果属性的定义的顺序不同，该方法会返回 false；\n * - 该方法依赖于 JSON.stringify() 的逻辑；\n */\nexport function isEqualOfJSON(value1, value2) {\n  return JSON.stringify(value1) == JSON.stringify(value2);\n}\n\n\n\n\n  //遍历优化：开始\n\n\n/**\n * multipleLoop(option)=> stopLoop()\n * 多次遍历、分批循环；可以把一个大遍历分成若干个小遍历来完成；\n * @param option : {loopCall,complete,stepComplete,thisValue,total,step,delay}   选项对象\n * @property option.loopCall : (index,stepCount,total)=>stopInfo : any  必选；每次循环的回调函数；入参  index : number  表示当前循环的 index，从0开始；入参 stepCount : number  表示已经遍历的批数、周期数；入参 total: number 循环的总数； 返回 stopInfo : any 停止循环并返回停止相关的信息；\n * @property option.stepComplete ？ : (index,stepCount,total)=>stopInfo : any  可选；每批循环完成时的回调函数；入参  index : number  表示当前循环的 index，从0开始；入参 stepCount : number  表示已经遍历的批数、周期数；入参 total: number 循环的总数； 返回 stopInfo : any 停止循环并返回停止相关的信息；\n * @property option.complete ？: (stopInfo,index,stepCount,total)=>Void  可选；循环结束时的回调函数； 入参 stopInfo : any 停止循环遍历时停止信息；入参  index : number  表示最后一次循环的 index，如果值为-1 表示没有进行过循环值终止了；入参 stepCount : number  表示已经遍历的批数、周期数；入参 total: number 循环的总数；\n * @property option.thisValue ? : any   loopCall、complete、stepComplete 回调函数的this的值；\n * @property option.total ? : number   可选；默认值：无穷大 Number.POSITIVE_INFINITY ; 设置总数循环次数；\n * @property option.step ? : number    可选； 默认值： 50 ； 设置每次遍历的循环次数；\n * @property option.delay ? : Timestamp   可选；默认值 ：0 ； 设置再次遍历的间隔时间；\n * @returns stopLoop : (stopInfo)=>Void    停止循环的函数；调用该函数，会终止正在进行的循环； 入参 stopInfo : any 停止循环的相关信息\n */\n\n\nexport function multipleLoop({loopCall,complete,stepComplete,thisValue,total=Number.POSITIVE_INFINITY,step = 50,delay = 0}) {\n\n\n  let index = 0;\n  let stepCount = 0;   //已经完成了多少批遍历\n\n\n  /**\n   * 设置是否要停止循环；\n   *\n   * 之所以通过函数来设置，而不是直接给stop变量赋值，是因为：\n   * - 确定 结束循环时 只调用一次  complete ；\n   */\n  let stop = false;    //停止循环的开关；表示是否终止循环；\n  function setStop(newValue){\n    if (newValue){\n      stop = newValue;\n\n      if (complete) {\n        complete.call(thisValue,stop,index,stepCount,total);\n      }\n    }\n  }\n\n\n  /**\n   * 是否需要循环；\n   * @returns boolean\n   *\n   * 之所以定义成函数形式，而不定义成变量，是因为：\n   * - 减少代码冗余；\n   * - 确定 结束循环时 只调用一次  complete ；\n   */\n  function loop(){\n    let needLoop = index < total;\n\n    if (!needLoop && complete) {\n      complete.call(thisValue,false,index-1,stepCount,total);\n    }\n    return needLoop\n  }\n\n\n  let timeoutId = null;\n\n\n\n\n\n\n  /**\n   * 自调用单次循环\n   */\n  function atuoSingleLoop() {\n    stepCount++;\n\n    let singleTotal = Math.min(index + step,total);\n\n    function singleLoop(){return index < singleTotal}\n\n    while (singleLoop() && !stop){\n      setStop(loopCall.call(thisValue,index,stepCount,total));\n      index++;\n    }\n\n    if (stepComplete){\n      setStop(stepComplete.call(thisValue,index-1,stepCount,total));\n    }\n\n\n    if (loop() && !stop){\n      timeoutId = setTimeout(atuoSingleLoop,delay);\n    }\n  }\n\n\n  /**\n   * 停止循环\n   */\n  function stopLoop(stopInfo) {\n    if (!stopInfo){\n      stopInfo = true;\n    }\n\n    clearTimeout(timeoutId);\n    setStop(stopInfo);\n  }\n\n\n\n  if (loop()){ //开始循环\n    atuoSingleLoop();\n  }\n\n\n  return stopLoop;\n};\n\n\nlet arrayPropertyDescriptors = {\n\n\n  /**\n   * multipleLoop(option)=> stopLoop()\n   * 多次遍历、分批循环；可以把一个大遍历分成若干个小遍历来完成；\n   * @param option : {loopCall,complete,stepComplete,thisValue,step,delay}   选项对象\n   * @property option.loopCall : (currentValue,index,stepCount,arr)=>stopInfo : any  必选；每次循环的回调函数；入参 currentValue : Item  当前index对应数组元素； 入参  index : number  表示当前循环的 index，从0开始；入参 stepCount : number  表示已经遍历的批数、周期数；入参 arr:Array 当前被循环的数组； 返回 stopInfo : any 停止循环并返回停止相关的信息；\n   * @property option.stepComplete ？ : (index,stepCount,arr)=>stopInfo : any  可选；每批循环完成时的回调函数；入参  index : number  表示当前循环的 index，从0开始；入参 stepCount : number  表示已经遍历的批数、周期数；入参 arr: Array 被循环的数组，即当前数组； 返回 stopInfo : any 停止循环并返回停止相关的信息；\n   * @property option.complete ？: (stopInfo,index,stepCount,arr)=>Void  可选；循环结束时的回调函数；入参 stopInfo : any 停止循环遍历时停止信息；入参  index : number  表示最后一次循环的 index，如果值为-1 表示没有进行过循环值终止了；入参 stepCount : number  表示已经遍历的批数、周期数；入参 arr: Array 被循环的数组，即当前数组；\n   * @property option.thisValue ? : any   可选；默认值：当前数组； loopCall、complete、stepComplete  回调函数的this的值；\n   * @property option.step ? : number    可选； 默认值： 50 ； 设置每次遍历的循环次数；\n   * @property option.delay ? : Timestamp   可选；默认值 ：0 ； 设置再次遍历的间隔时间；\n   * @returns stopLoop : (stopInfo)=>Void    停止循环的函数；调用该函数，会终止正在进行的循环； 入参 stopInfo : any 停止循环的相关信息\n   */\n  multipleLoop: {\n    enumerable: false,\n    value: function ({loopCall,complete,stepComplete,thisValue,step,delay}) {\n\n      if (thisValue){\n        thisValue = this;\n      }\n\n      let loopOpt = {\n        loopCall:(index,stepCount,total)=> {\n          return loopCall.call(thisValue,this[index],index,stepCount,this);\n        },\n        total:this.length,\n        step:step,\n        delay:delay\n      };\n\n      if (complete){\n        loopOpt.complete = (stopInfo,index,stepCount,total)=>{\n          return complete.call(thisValue,stopInfo,index,stepCount,this);\n        };\n      }\n\n      if (stepComplete){\n        loopOpt.stepComplete = (index,stepCount,total)=>{\n          return stepComplete.call(thisValue,index,stepCount,this);\n        };\n      }\n\n\n      return multipleLoop(loopOpt);\n    }\n  }\n\n};\n\n  Object.defineProperties(Array.prototype, arrayPropertyDescriptors);\n\n\n\n  //遍历优化：结束\n\n\n\n\n\n\n/**\n * safelyIterate(iterable,operation, thisValue)\n * 对 iterable  进行安全的迭代；与 for...of 的区别是：safelyIterate 能保证会迭代过程不会受 operation 中的行为的影响从而迭代每一个元素；\n * @param iterable : Iterable   必选； 可迭代的对象；\n * @param operation : (currentValue,currentIndex,iterable)=>boolean | undefined     执行的操作， 该函数的返回值表示是否要过滤出该元素\n * @param thisValue ? : any   可选，默认值是 iterable ；操作 operation 的 this 值\n * @returns [Item]  返回被 operation 过滤出的元素\n *\n *\n * operation(currentValue,currentIndex,iterable)=>boolean | undefined\n * @param currentValue : any   调用 operation 时的元素的值；\n * @param currentIndex : number     currentValue 在原始 iterable 中 对应的迭代索引值；\n * @param iterable : Iterable   被迭代的 iterable ；\n * @returns boolean | undefined  表示是否要过滤出 currentValue ；\n *\n */\nexport function safelyIterate(iterable,operation, thisValue) {\n\n  if (thisValue == undefined) {\n    thisValue = iterable;\n  }\n\n  let arrayCopy = [];\n\n  for (let value of iterable){\n    arrayCopy.push(value);\n  }\n\n  let filterItem = arrayCopy.filter(function (currentValue) {\n    let currentIndex = this.indexOf(currentValue);\n    operation.call(thisValue, currentValue, currentIndex, iterable);\n  },arrayCopy);\n\n\n  return filterItem;\n\n};\n\n\n\n\n\n\n//类型：开始\n\n\n/**\n * 获取 inst 的类型\n * @param inst : any\n * @returns Type    inst 的类型\n *\n *\n *\n * 注意：\n * 本方法返回的结果如下：\n * undefined ：undefined\n * null ： null\n * 其它任何类型的实例  : 返回该实例的构造函数  或 包装对象的构造函数\n *\n */\nexport function getTypeOf(inst) {\n  var typeInfo = inst;\n  if (inst != null){\n    typeInfo = inst.constructor;\n  }\n\n  return typeInfo;\n\n}\n\n\n\n\n\n/**\n * 获取 inst 的类型字符串\n * @param inst : any\n * @returns string    inst 的类型字符串\n *\n *\n *\n * 注意：\n * 本方法返回的结果如下：\n * undefined ：\"undefined\"\n * null ： \"null\"\n * 其它任何类型的实例  : 返回该实例的构造函数  或 包装对象的构造函数 的函数名字\n *\n */\nexport function getTypeStringOf(inst) {\n\n  switch (inst){\n    case undefined:{\n      var typeStr = \"undefined\";\n      break;\n    }\n\n    case null:{\n      typeStr = \"null\";\n      break;\n    }\n\n    default:{\n      typeStr = inst.constructor.name;\n    }\n  }\n\n  return typeStr;\n\n};\n\n\n\n//类型：结束\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * 定义可监听的属性\n *\n * @param obj : Object   必选；要在其上定义属性的对象。\n * @param prop : string   必选；要定义的属性的名称。\n * @param options ?: {ready ?:string,noEvent ?:boolean,event ?:string,newValueKey ?:string,oldValueKey ?:string,getDefault ?:(thisValue)=>PropValue}     可选；配置选项；各个选项的说明如下；\n * @property  ready ?:string    可选；默认值：prop + \"Ready\" ；ready属性的属性名字；\n * @property  noEvent ?:boolean    可选；默认值：false ；是否要给 prop 属性增加值变更事件；\n * @property  event ?:string    可选；默认值：prop +  \"Change\" ；prop变更事件的名字；\n * @property  newValueKey ?:string    可选；默认值：\"value\" ；prop变更事件的事件对象中保存新值的属性名字；\n * @property  oldValueKey ?:string    可选；默认值：\"oldValue\" ；prop变更事件的事件对象中保存旧值的属性名字；\n * @property  getDefault ?:(thisValue)=>PropValue    可选；在获取 prop 属性的值时，如果 prop 属性的值不存在 ，则会通过 该函数获取默认的值；\n *\n *\n * @returns obj : Object  被传递给函数的对象。\n */\nexport function defineListenableProperty(obj,prop,options){\n  let {ready:readyName = prop + \"Ready\",noEvent,event:eventName = prop +  \"Change\",newValueKey = \"value\",oldValueKey = \"oldValue\",getDefault} = options || {};\n  let priReadyName = \"_\" + readyName;\n  let priProp = \"_\" + prop;\n\n\n\n  /**\n   * 给 obj 定义 ready 计算属性 ，用于获取客户端的准备状态的promise ，当访问 ready 时，如果 ready 不存在，则会自动创建\n   */\n  Object.defineProperty(obj, readyName, {\n    configurable:true,\n    enumerable:true,\n    get: function () {\n      let _this = this || window;\n      if (!_this[priReadyName]) {\n        let propValue = _this[priProp];\n        if (propValue){\n          _this[priReadyName] = Promise.resolve(propValue);\n        }else {\n          _this[priReadyName] = createControllablePromise();\n        }\n\n      }\n      return _this[priReadyName];\n    },\n    set:function (newValue) {\n      let _this = this || window;\n      _this[priReadyName] = newValue;\n    }\n  });\n\n\n\n  //创建 prop 的 get 方法\n  if (getDefault){\n\n    var propGetter = function () {\n      let _this = this || window;\n      if (!_this[priProp] && getDefault) {\n        _this[prop] = getDefault.call(_this,_this);\n      }\n      return _this[priProp];\n    }\n\n  }else {\n\n    propGetter = function () {\n      let _this = this || window;\n      return _this[priProp];\n    }\n\n  }\n\n\n  //创建 prop 的 set 方法\n\n  if (noEvent){\n\n\n    var propSetter =  function (newValue) {\n      let _this = this || window;\n      if (newValue && newValue !== _this[priProp]) {\n\n\n        let oldValue = _this[priProp];\n        _this[priProp] = newValue;\n\n        let httpReady = _this[readyName];\n        if (httpReady.resolve) {\n          httpReady.resolve(newValue);\n        }else {\n          _this[readyName] = Promise.resolve(newValue);\n        }\n\n      }\n    }\n\n  }else {\n\n\n    propSetter =  function (newValue) {\n      let _this = this || window;\n      if (newValue && newValue !== _this[priProp]) {\n\n\n        let oldValue = _this[priProp];\n        _this[priProp] = newValue;\n\n        let httpReady = _this[readyName];\n        if (httpReady.resolve) {\n          httpReady.resolve(newValue);\n        }else {\n          _this[readyName] = Promise.resolve(newValue);\n        }\n\n        //派发 change 事件\n        let change = new Event(eventName, {\"bubbles\": true});\n        change[newValueKey] = newValue;\n        change[oldValueKey] = oldValue;\n        window.dispatchEvent(change);\n\n\n      }\n    }\n\n  }\n\n\n\n\n\n  /**\n   * 给 obj 对象 添加计算属性 prop ，用以获取 prop\n   *\n   * 注意：\n   * 当 prop 的值变更时，会在 window 上触发该属性的 change 事件\n   * 通过事件的 event[newValueKey] 可能获取改变后的新值\n   * 通过事件的 event[oldValueKey] 可能获取改变前的旧值\n   */\n  Object.defineProperty(obj, prop, {\n    configurable:true,\n    enumerable:true,\n    get: propGetter,\n    set: propSetter\n  });\n\n\n  return obj;\n}\n\n\n\n\n\n/**\n * 批量定义可监听的属性\n *\n * 接口1：defineListenableProperties(obj,propOptions)\n * @param obj : Object   必选；要在其上定义属性的对象。\n * @param propOptions : {propName:options}   必选；要定义的属性的配置对象；以该配置对象的属性属性为 要配置的属性的名字，以其值为 本配置的属性的 配置选项\n * @returns obj : Object  被传递给函数的对象。\n *\n *\n * 接口2：defineListenableProperties(obj,propArray,options)\n * @param obj : Object   必选；要在其上定义属性的对象。\n * @param propArray : [string]   必选；要在其上定义的属性的名字列表。\n * @param options ?: {ready ?:string,noEvent ?:boolean,event ?:string,newValueKey ?:string,oldValueKey ?:string,getDefault ?:(thisValue)=>PropValue}     可选；配置选项；各个选项的说明如下；\n *\n * @returns obj : Object  被传递给函数的对象。\n */\nexport function defineListenableProperties(obj,props,options){\n\n  var propsObj = props;\n  if (Array.isArray(props)) {\n    propsObj = props.reduce(function (total,propName) {\n      total[propName] = options;\n      return total;\n    },{});\n  }\n\n\n  Object.keys(propsObj).forEach(function (propName) {\n    let propOpts = propsObj[propName];\n    defineListenableProperty(obj,propName,propOpts);\n  });\n\n  return obj;\n}\n\n\n/**\n * defineListenablePropertyGetter(obj, prop, getDefault, asGetter)\n * 定义可监听属性的 getter ； 该方法一般经常用于：一些可监听属性在被定义时，还不能定义 getDefault 选项，只能在稍后某个时刻定义 getDefault 选项，此时便可用此函数来简化重新定义 getter 的操作；\n * @param obj : Object   必选；要在其上定义属性的对象。\n * @param prop : string   必选；要定义的属性的名称。\n * @param  getDefault ?:(thisValue)=>PropValue    可选；在获取 prop 属性的值时，如果 prop 属性的值不存在 ，则会通过 该函数获取默认的值；\n * @param asGetter ?: boolean    可选；是否将 getDefault 作为 getter\n */\nexport function defineListenablePropertyGetter(obj, prop, getDefault, asGetter) {\n\n  let priProp = \"_\" + prop;\n\n  if (asGetter) {\n    var propGetter = getDefault;\n  } else if (getDefault) {\n\n    propGetter = function () {\n      let _this = this || window;\n      if (!_this[priProp] && getDefault) {\n        _this[prop] = getDefault.call(_this, _this);\n      }\n      return _this[priProp];\n    }\n\n  } else {\n\n    propGetter = function () {\n      let _this = this || window;\n      return _this[priProp];\n    }\n\n  }\n\n\n  Object.defineProperty(obj, prop, {\n    configurable:true,\n    enumerable:true,\n    get: propGetter\n  });\n}\n\n\n/**\n * 生成唯一的标识符\n * @returns {string}\n */\nexport function createUniqueIdentifier() {\n  var currentDate = new Date();\n  return currentDate.getTime().toString() + Math.random();\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * createControllablePromise(executor ?:(resolve, reject)=>Void)\n * 创建外部可控制的改变 Promise 状态 Status 的 Promise 对象；该 Promise 对象在 状态 未完成之前，会有 resolve、reject、clearAdditions 三个方法，当 Promise 的状态完成时，resolve、reject、clearAdditions 这三个方法会自动被删除；其中 clearAdditions 方法是用来 清除 该实例的 resolve、reject、clearAdditions 这三个方法的；\n *\n * @param executor ?: (resolve, reject)=>Void    可选；executor是带有 resolve 和 reject 两个参数的函数 。Promise构造函数执行时立即调用executor 函数，\n * @param statusCompletesImmediately ?: boolean   可选；默认值：true； 该参数表示在 executor 函数中是否会立即（同步）调用 resolve 或 reject ；如果是，则会把 executor 函数变成异步执行，以来避免在执行 clearAdditions 时引用 还未创建的 真实的 promise 实例；\n * @returns Promise   返回一个带有 resolve、reject 和 clearAdditions  三个方法的 Promise 实例，在该实例的 状态没有改变之前 ，通过 resolve 和 reject 这两个方法，可以改变 Promise 的状态，并且会自动调用 clearAdditions 方法来清除  resolve、reject、clearAdditions 这三个方法； clearAdditions 方法用来清除 resolve、reject 和 clearAdditions  这三个方法的\n */\nexport function createControllablePromise(executor,statusCompletesImmediately) {\n  let executorIsvalid = typeof executor == \"function\";\n  if (executorIsvalid && statusCompletesImmediately == undefined){\n    statusCompletesImmediately = true\n  }\n\n\n  var oriFuns = {};\n\n  function clearAdditions() {\n    caPromise.resolve = undefined;\n    caPromise.reject = undefined;\n    caPromise.clearAdditions = undefined;\n  }\n\n  function resolveFun(value) {\n    clearAdditions();\n    oriFuns.resolve(value);\n  }\n\n  function rejectFun(reason) {\n    clearAdditions();\n    oriFuns.reject(reason);\n  }\n\n\n  var caPromise = new Promise(function (resolve, reject) {\n    oriFuns.resolve = resolve;\n    oriFuns.reject = reject;\n    if (executorIsvalid) {\n      if (statusCompletesImmediately) {\n        setTimeout(executor,0,resolveFun, rejectFun);\n      }else {\n        return executor(resolveFun, rejectFun);\n      }\n    }\n  });\n\n  caPromise.clearAdditions = clearAdditions;\n  caPromise.resolve = resolveFun;\n  caPromise.reject = rejectFun;\n\n\n  return caPromise;\n}\n"],"sourceRoot":""}